[ { "title": "Promptcrafte: Vector Art Greeting Cards", "url": "/posts/vector-art-greeting-card/", "categories": "Stable Diffusion, prompts", "tags": "stable diffusion", "date": "2022-08-22 00:00:00 -0400", "snippet": "This is a living document dedicated to capturing a particular generative style.`prompt = ‚ÄúPortrait of a haunted porcelain doll. Clean Cel shaded vector art. Shutterstock. behance hd by lois van baarle, artgerm, Helen huang, by makoto shinkai and ilya kuvshinov, rossdraws, illustration‚Äùwith autocast(‚Äúcuda‚Äù): image = pipe(prompt, height=512, width=512)[‚Äúsample‚Äù][0] pipe.safety_checker = (lambda images, clip_input: (images, False))image`" }, { "title": "Promptcrafte: Cinematography by Robert Elswit", "url": "/posts/cinematography-by-robert-elswit/", "categories": "Stable Diffusion, prompts", "tags": "stable diffusion", "date": "2022-08-22 00:00:00 -0400", "snippet": "This is a living document dedicated to capturing a particular generative style.`from torch import autocastgenerator = torch.Generator(‚Äúcuda‚Äù).manual_seed(1024)prompt = ‚ÄúCinematography by Robert Elswit. Anamorphic lens depth of field. Bokeh caused by anamorphic lens. Flare caused by anamorphic lens. Dark fringing caused by anamorphic lens.‚Äùwith autocast(‚Äúcuda‚Äù): image = pipe(prompt, num_inference_steps=60, guidance_scale = 7.5, height=384, width=768, generator=generator)[‚Äúsample‚Äù][0] pipe.safety_checker = (lambda images, clip_input: (images, False))image`" }, { "title": "Promptcrafte: Aspect Ratio Cheat Sheet", "url": "/posts/aspect-ratio-cheat-sheet/", "categories": "Stable Diffusion, prompts", "tags": "stable diffusion, aspect ratio", "date": "2022-08-22 00:00:00 -0400", "snippet": "7:5320x448640x896960x13441280x17924:3512x6402:1384x768512x10247:3896x3842.39:11280x5361920x804" }, { "title": "Download Movie Streams", "url": "/posts/download-movie-streams/", "categories": "CMD, ffmpeg", "tags": "üè¥‚Äç‚ò†Ô∏è, m3u8", "date": "2022-06-09 00:00:00 -0400", "snippet": "This is my tentative work flow for downloading movie streams online. The gist of what I‚Äôve learned about this process is that every HTTP Live Stream (HLS) begins with an .m3u8 playlist with a MIME type of x-mpegURL or vnd.apple.mpegURL. This playlist lists a series of .ts files that are streamed one at a time and decoded so your browser is not burdened with downloading the entire movie every time you refresh the page. These .ts files can also be aggregated and assembled into a video.Finding the Playlist.m3u8 playlists load at the very beginning of the stream and are easy to spot in Firefox Developer Edition. Navigate to the stream, press F12, click on the ‚ÄúNetwork‚Äù tab and refresh the page.In this first example we see the .m3u8 playlist referred to as a Manifest. It sticks out in Firefox Developer Edition because the MIME type is vnd.apple.mpegURL. In Edge or Chrome this type will be something nondescript for some reason and the playlist will be much harder to spot. Right-click on the GET request for the playlist copy the URL, and you will have something like this:https://cdn-ce21media.streaming.mediaservices.windows.net/REDACTED/20220518_day1dbt_baxermusser8460.ism/QualityLevels(1194234)/Manifest(video,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)You‚Äôll know you‚Äôre on the right track if you open a downloaded .m3u8 file in Notepad++ and it looks something like this:#EXTM3U#EXT-X-VERSION:3#EXT-X-PLAYLIST-TYPE:VOD#EXT-X-ALLOW-CACHE:NO#EXT-X-MEDIA-SEQUENCE:0#EXT-X-TARGETDURATION:6#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00Z#EXTINF:6.000000,no-descFragments(video=0,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)#EXTINF:6.000000,no-descFragments(video=60000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)#EXTINF:6.000000,no-descFragments(video=120000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)#EXTINF:6.000000,no-descFragments(video=180000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)#EXTINF:6.000000,no-desc...Fragments(video=249540000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)#EXT-X-ENDLISTThis URL can then be fed into ffmpeg like so and you will have successfully downloaded the stream:ffmpeg -i \"https://cdn-ce21media.streaming.mediaservices.windows.net/REDACTED/20220518_day1dbt_baxermusser8460.ism/QualityLevels(1194234)/Manifest(video,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)\" movie.mp4Here is an example of a stream that the content host was trying to protect. The file is plainly named v.m3u8 and the MIME type is vnd.apple.mpegURL. However, when we look at the playlist itself the fragments are obfuscated as .jpg files.#EXTM3U#EXT-X-VERSION:3#EXT-X-MEDIA-SEQUENCE:0#EXT-X-ALLOW-CACHE:YES#EXT-X-TARGETDURATION:4#EXTINF:3.083333,0000.jpg#EXTINF:3.000000,0001.jpg#EXTINF:3.000000,0002.jpg#EXTINF:3.000000,0003.jpg#EXTINF:3.000000,0004.jpg#EXTINF:3.000000,0005.jpg#EXTINF:3.000000,0006.jpg#EXTINF:3.000000,0007.jpg...#EXTINF:2.250000,1898.jpg#EXT-X-ENDLIST" }, { "title": "Logistic Map", "url": "/posts/logistic-map/", "categories": "Java, Processing", "tags": "fractal", "date": "2022-05-14 00:00:00 -0400", "snippet": "hell yeah dude" }, { "title": "Archimedean Spiral", "url": "/posts/archimedean-spiral/", "categories": "JavaScript, p5.js", "tags": "spiral, interactive", "date": "2022-05-04 00:00:00 -0400", "snippet": " Edit This SketchThis sketch draws an Archimedean Spiral using polar coordinates. If the ‚ÄúEXPORT‚Äù variable is true, the sketch will spit-out an SVG file of the drawn spiral. My motivation for making this was so I could cut-out a spiral with my wife‚Äôs Cricut Maker and hang something more interesting above my son‚Äôs bassinet than empty white ceiling.Example SVG files" }, { "title": "rundll32", "url": "/posts/rundll32/", "categories": "CMD, Windows", "tags": "rundll32, userdll32", "date": "2022-04-21 00:00:00 -0400", "snippet": "Loads and runs 32-bit dynamic-link libraries (DLLs). You must run the rundll32 command from an elevated command prompt. To open an elevated command prompt, click Start, right-click Command Prompt, and then click Run as administrator.Make Windows beeprundll32 user32.dll, MessageBeepLock Workstationrundll32 user32.dll, LockWorkStationPut Workstation to sleeprundll32 powrprof.dll, SetSuspendState SleepMicrosoft Referencess64.com Reference" }, { "title": "Using the NVIDIA Maxine Audio Effects SDK Demo", "url": "/posts/using-the-nvidia-maxine-audio-effects-sdk-demo/", "categories": "NVIDIA, Maxine", "tags": "audio, sound, SDK", "date": "2022-04-20 00:00:00 -0400", "snippet": "This is my tentative workflow for cleaning-up poor audio using the NVIDIA Maxine SDK.Download the Latest Audio Effects SDKNVIDIA Maxine Documentation Find and download a YouTube video using youtube-dl youtube-dl -f bestaudio https://www.youtube.com/watch?v=XlfcvUtUoOM The Audio Effects SDK only accepts audio that is in .wav format sampled at 8000Hz single-channel, 16000Hz single-channel, or 48000Hz single-channel. This can be resampled using ffmpeg. Convert a .mp3 file to 8kHz, single-channel PCM: ffmpeg -i test.mp3 -ar 8000 -ac 1 input.wav Convert a .m4a file to 16kHz, single-channel PCM: ffmpeg -i \"Elvis How great thou art 1972 (very impressive)-XlfcvUtUoOM.m4a\" -ar 16000 -ac 1 input.wav Convert a .wav file to 48kHz, single-channel PCM: ffmpeg -i test.wav -ar 48000 -ac 1 -input.wav Create a config file to use with the effects_demo included with the SDK. Below is an example config ‚Äúmyconfig.txt‚Äù that combines two pre-trained models provided by the SDK to reduce reverb, to reduce noise, and to create an upscaled, supperresolution version of the audio. # Effecteffect dereverb_denoiser16k_superres16kto48k# Point this to the model file.model ..\\..\\bin\\models\\turing\\dereverb_denoiser_16k.trtpkg,..\\..\\bin\\models\\turing\\superres_16kto48k.trtpkg# Input fileinput_wav input.wav# Effect applied audio data will be saved to this file.output_wav output.wav# Set to 1 for real time mode i.e. audio data will be processed # at same speed like that of an audio input device like# microphone. Since the denoising is faster that real time, the# processing will be equal to audio file duration.real_time 0# Intensity Ratiointensity_ratio 1.0,1.0 Run the NVIDIA effects_demo with the aforementioned config file. effects_demo.exe -c myconfig.txt " }, { "title": "youtube-dl", "url": "/posts/youtube-dl/", "categories": "CMD, youtube-dl", "tags": "audio, video, üè¥‚Äç‚ò†Ô∏è", "date": "2022-04-16 00:00:00 -0400", "snippet": "youtube-dl is a command-line program to download videos from www.youtube.com and a few other sites.ExamplesDownload a YouTube video with the best available audio quality:youtube-dl -f bestaudio \"https://www.youtube.com/watch?v=iik25wqIuFo\"Download an entire YouTube playlist:youtube-dl --yes-playlist \"https://www.youtube.com/playlist?list=PLG49S3nxzAnmpdmX7RoTOyuNJQAb-r-gd\"Begin downloading from a playlist at a specific position:youtube-dl --yes-playlist --playlist-start 22 \"https://www.youtube.com/watch?v=M5c9HdaQqh0&amp;list=PLG49S3nxzAnmpdmX7RoTOyuNJQAb-r-gd\"Download the Windows executable" }, { "title": "ffmpeg", "url": "/posts/ffmpeg/", "categories": "CMD, ffmpeg", "tags": "audio, video", "date": "2022-04-16 00:00:00 -0400", "snippet": "ffmpeg is a complete, cross-platform solution to record, convert and stream audio and video.ffmpeg Downloadffmpeg DocumentationAudio ProcessingConvert to 8kHz, single-channel PCMffmpeg -i \"input.mp3\" -ar 8000 -ac 1 output.wavConvert to 16kHz, single-channel PCMffmpeg -i \"input.mp3\" -ar 16000 -ac 1 output.wavConvert to 48kHz, single-channel PCMffmpeg -i input.mp3 -ar 48000 -ac 1 output.wavVideo ProcessingAdd Music to a Videoffmpeg -i video.mp4 -i music.mp3 -codec copy -shortest output.mp4 -i video.mp4 Select ‚Äúvideo.mp4‚Äù as an input file from the same directory. -i music.mp3 Select ‚Äúmusic.mp4‚Äù as an input file from the same directory. -codec copy Specifies that we are not re-encoding anything. -shortest Use this flag if the video length is shorter than the audio length. Otherwise, use no flag at all here.Assemble images into a videoffmpeg -framerate 60 -s 2560x1440 -i %04d.png output.mp4 -framerate 60 Set the frame rate to 60FPS. -s 2560x1440 Set the video resolution to 2560x1440 pixels. -i %04d.png This flag assumes there is a folder of .png files in the same directory named in the format 0001.png, 0002.png, etc. It will load all images following this naming convention as inputs to be processed.Re-encode Video For YouTubeffmpeg -i transition.mp4 -c:v libx264 -preset slow -crf 18 -c:a copy -pix_fmt yuv420p transition.mkv -i transition.mp4 Select ‚Äútransition.mp4‚Äù as the input file. -c:v libx264 set the video codec to H.264 -preset slow A preset is a collection of options that will provide a certain encoding speed to compression ratio. A slower preset will provide better compression (compression is quality per filesize). This means that, for example, if you target a certain file size or constant bit rate, you will achieve better quality with a slower preset. Similarly, for constant quality encoding, you will simply save bitrate by choosing a slower preset. Use the slowest preset that you have patience for. The available presets in descending order of speed are: ultrafast superfast veryfast faster fast medium (default preset) slow slower veryslow -crf 18 Constant Rate Factor (CRF). The range of the CRF scale is 0‚Äì51, where 0 is lossless, 23 is the default, and 51 is worst quality possible. A lower value generally leads to higher quality, and a subjectively sane range is 17‚Äì28. Consider 17 or 18 to be visually lossless or nearly so; it should look the same or nearly the same as the input but it isn‚Äôt technically lossless. -c:a copy Copy the audio codec from that of the input file to the output file -pix_fmt yuv420p This flag is only needed for your output to work in QuickTime, Windows Media player and other offline media players. These players only support the YUV planar color space with 4:2:0 chroma subsampling for H.264 video. Otherwise, depending on your source, ffmpeg may output to a pixel format that may be incompatible with these players.Image ProcessingCreate an animated GIF from a videoffmpeg -i transition.mp4 -c:v libx264 -preset slow -crf 18 -c:a copy -pix_fmt yuv420pAssembled a folder of images into an animated GIFThe file size of an animated GIF can be minimized by first generating a color palette.ffmpeg -y -i %3d.png -vf palettegen palette.pngffmpeg -y -f image2 -framerate 60 -i %3d.png -i palette.png -filter_complex paletteuse file.gifResize a whole folder of framesffmpeg -f image2 -i \"%04d.png\" -vf scale=\"256:256\" \"resized/%04d.png\"" }, { "title": "Dump WiFi Passwords", "url": "/posts/dump-wifi-passwords/", "categories": "PowerShell, Security", "tags": "netsh, passwords, reports", "date": "2022-04-11 00:00:00 -0400", "snippet": "This PowerShell script dumps the saved passwords of all wireless networks saved on a Windows 10 or Windows 11 computer. It accomplishes this by first calling:netsh wlan show profileand then:netsh wlan show profile [SSID] key=clearThe outputs of these commands are captured in arrays and everything beyond that is just string matching and filtering. The output is saved as ‚Äúoutput.csv‚Äù to your working directory and then automatically opens output.csv using the Invoke-Item cmdlet." }, { "title": "Record Desktop Silently", "url": "/posts/record-desktop-silently/", "categories": "VBScript, Batchfile", "tags": "ffmpeg", "date": "2022-02-09 00:00:00 -0500", "snippet": "Place these 3 files in any directory and run update.vbs to begin recording a Windows session silently.Github Repositoryupdate.exe This file is just ffmpeg that‚Äôs been renamed to be slightly more inconspicuous in Task Manager.update.bat There are two lines to this batch file. The first line deletes ‚Äúoutput.mp4‚Äù if it already exists in the same directory. The framerate in frames per second of the recording is set here following the ‚Äú-framerate‚Äù flag The amount of time in seconds to record is set here following the ‚Äú-t‚Äù flag output.mp4 will be saved in the same directory after the specified amount of recording time is up.update.vbs This Visual Basic script runs udpate.bat without a visible command prompt." }, { "title": "Combining PowerShell Cmdlets", "url": "/posts/combining-powershell-cmdlets/", "categories": "PowerShell, Exchange Online", "tags": "exchange online management, azure, reports, active directory", "date": "2021-11-17 00:00:00 -0500", "snippet": "I found myself in a situation where I needed to generate a report to troubleshoot an email issue for a client. Some data could only be retrieved from the ExchangeOnlineManagement module, and other data only from the AzureAD module. This PowerShell script demonstrates one solution of using both modules in tandem with a nested for-loop that compares the UserPrincipalName with every iteration." }, { "title": "Managing Exchange Online Calendars", "url": "/posts/manage-exchange-online-calendars/", "categories": "PowerShell, Exchange Online", "tags": "exchange online, office, reports, calendars", "date": "2021-09-16 00:00:00 -0400", "snippet": "Manage client calendars for them, using the the ExchangeOnlineManagement module. " }, { "title": "Active Directory Group Membership", "url": "/posts/active-directory-group-membership/", "categories": "PowerShell, Active Directory", "tags": "active directory, domain, reports", "date": "2021-09-16 00:00:00 -0400", "snippet": "This PowerShell script generates a report showing all groups and group members when run on an on-premises domain controller. The script requires that you import the ActiveDirectory module. The report is in .csv format so the rows may need some manipulation to see all the members if you‚Äôre opening it in Excel." }, { "title": "Managing Auto-Expanding Archives", "url": "/posts/manage-auto-expanding-archives/", "categories": "PowerShell, Exchange Online", "tags": "exchange online, office, reports", "date": "2021-07-06 00:00:00 -0400", "snippet": "Managing auto-expanding archives via the ExchangeOnlineManagement module is a pain in my ass. This Github Gist is an aggregate of scripts I‚Äôve written that allow me to administrate this mailbox feature effectively." }, { "title": "3D k-means Clustering", "url": "/posts/k-means-clustering/", "categories": "Java, Processing", "tags": "k-means", "date": "2021-05-18 00:00:00 -0400", "snippet": "Wikipedia k-means clustering is a method of vector quantization, originally from signal processing, that aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean (cluster centers or cluster centroid), serving as a prototype of the cluster. This results in a partitioning of the data space into Voronoi cells.Github RepositoryK=2K=3K=4K=5" }, { "title": "Windows 10/11 ms-settings URI Scheme Reference", "url": "/posts/ms-settings-uri-reference/", "categories": "Windows, reference", "tags": "", "date": "2021-01-01 00:00:00 -0500", "snippet": "Knowing the URI Scheme is useful because you can jump straight to specific settings menus using ü™ü+R.Source" }, { "title": "Remove-AppxPackage", "url": "/posts/remove-appx-packages/", "categories": "PowerShell, Appx", "tags": "appx", "date": "2019-08-28 00:00:00 -0400", "snippet": "Microsoft Reference" }, { "title": "Remote Reboot With SMTP Status", "url": "/posts/remote-reboot-with-smtp-status/", "categories": "PowerShell", "tags": "smtp", "date": "2019-08-28 00:00:00 -0400", "snippet": "PowerShell script that reboots a list of computers and emails the status of the machines. " }, { "title": "Daily Donation Report", "url": "/posts/daily-donation-report/", "categories": "JavaScript, Google Apps Script", "tags": "google forms, gsuite, reports", "date": "2019-08-25 00:00:00 -0400", "snippet": "This Google Apps Script aggregates data submitted by Google Forms, puts it in .xlsx format and sends it in an HTML formatted email. " }, { "title": "Buddhabrot, Java", "url": "/posts/buddhabrot-java/", "categories": "Java, Fractal", "tags": "fractal, buddhabrot", "date": "2019-08-25 00:00:00 -0400", "snippet": "This image was produced by my Java implementation of the Buddhabrot algorithm. I was very interested in this fractal as a teenager and believe I first encountered it on www.complexification.net when I was 15 or so.I needed a working implementation of rendering the Mandelbrot set before I could produce this image, so there are functions leftover in this program for generating the Mandelbrot set. I‚Äôve implemented some basic features such as random Gaussian points to introduce some blur, HSB color support, and basic Misiurewicz Point support. It‚Äôs Java though, so the performance is abysmal.Some stats on this image: HSB colorizing algorithm 7680x4320 pixels 3000 iterations 16:9 aspect ratioGitLab Repository" }, { "title": "Buddhabrot, C#", "url": "/posts/buddhabrot-c-sharp/", "categories": "C, Fractal", "tags": "fractal, buddhabrot", "date": "2019-08-25 00:00:00 -0400", "snippet": "This image was produced by my C# implementation of the Buddhabrot algorithm. Parallel.For makes multithreaded CPU rendering so easy and readable that I see no reason to continue writing anything fractal related in Java.Some stats on this image: 8191x8191 pixels 32bpp, ARGB Histogram coloring algorithm 50 passes, 1500 bailout value 1:1 aspect ratioGitHub Repository" }, { "title": "Enable AutoAdminLogon with PowerShell", "url": "/posts/autoadminlogon/", "categories": "PowerShell", "tags": "regedit, domain", "date": "2019-08-19 00:00:00 -0400", "snippet": "This script was written to satisfy a niche case where I temporarily needed a PoS (Point of Sale) to automatically login upon startup using AD credentials." }, { "title": "Blending Textures With Open Simplex Noise", "url": "/posts/blending-textures-with-open-simplex-noise/", "categories": "Java, Processing", "tags": "open simplex noise", "date": "2019-08-18 00:00:00 -0400", "snippet": "This Processing sketch loads twoimages and creates an image mask that blends them together. The transparency of the image mask is determined by 4D Open Simplex Noise, which loops perfectly.The ffmpeg command I used to assemble the frames is:ffmpeg -i gif-%03d.png output.gif" }, { "title": "Circle Packing", "url": "/posts/circle-packing/", "categories": "Java, Processing", "tags": "circle packing", "date": "2019-03-23 00:00:00 -0400", "snippet": "" }, { "title": "Robo Mirror", "url": "/posts/robo-mirror/", "categories": "CMD, Batchfile", "tags": "robocopy", "date": "2019-02-28 00:00:00 -0500", "snippet": "This batch file utilizes robocopy to mirror a list of files contained within ‚Äútargets.txt‚Äù in the same directory." }, { "title": "Cube Wave", "url": "/posts/cube-wave/", "categories": "Java, Processing", "tags": "", "date": "2018-12-30 00:00:00 -0500", "snippet": "Here‚Äôs my take on‚Ä¶ Daniel Shiffman‚Äôs take on‚Ä¶ Beesandbomb‚Äôs take on the cube wave.Sources https://twitter.com/beesandbombs/status/940639806522085376 https://www.youtube.com/watch?v=H81Tdrmz2LA" }, { "title": "Lorenz Doll", "url": "/posts/lorenz-doll/", "categories": "Java, Processing", "tags": "lorenz system", "date": "2018-11-21 00:00:00 -0500", "snippet": "In this sketch I turned every pixel of an image into a Lorenz System. I mapped the velocity of that system to the brightness value of the pixel. This was the result. Sadly, the Processing sketch I made this with is gone forever." }, { "title": "Fridge Magnet Simulator", "url": "/posts/fridge-magnet-simulator/", "categories": "JavaScript, p5.js", "tags": "processing, interactive", "date": "2018-11-16 00:00:00 -0500", "snippet": " Launch this sketch is a new window (recommended)Launch p5.js web editorThis is a virtual simulation of the magnets on my girlfriend‚Äôs fridge." }, { "title": "Orbiting Pixels Utility", "url": "/posts/orbiting-pixels-utility/", "categories": "JavaScript, p5.js", "tags": "processing, interactive", "date": "2018-11-12 00:00:00 -0500", "snippet": " Launch this sketch is a new window (recommended)Launch p5.js web editorThis is not a program that should be running in a browser. With that said, writing this program was a laborious process that taught me a lot about JavaScript, about Processing, and about optimization. The algorithm I implemented works first by creating a grid of evenly-spaced points. Each points has a corresponding object that rotates around that point that can be assigned characteristics such as rotation radius, a shape, and a color that corresponds to an x and y position on a source image. To make things more interesting, I mapped the phase of each object‚Äôs rotation to the brightness value of the source image‚Äôs corresponding pixel. The results‚Ä¶ could probably be better summarized with a YouTube demonstration. " }, { "title": "Counting Sort", "url": "/posts/counting-sort/", "categories": "Java, Processing", "tags": "sorting, counting sort", "date": "2018-07-18 00:00:00 -0400", "snippet": "" }, { "title": "Barnsley Fern", "url": "/posts/barnsley-fern/", "categories": "Java, Processing", "tags": "fractal", "date": "2018-06-28 00:00:00 -0400", "snippet": "hell yeah dude" }, { "title": "Ulam Spiral", "url": "/posts/ulam-sprial/", "categories": "Javascript, p5.js", "tags": "prime numbers, processing, interactive", "date": "2018-05-17 00:00:00 -0400", "snippet": " Launch this sketch is a new window (recommended)Launch p5.js web editorThe Ulam Spiral or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanislaw Ulam in 1963 and popularized in Martin Gardner‚Äôs Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers.What I‚Äôve done differently is allowed for iterating every integer in the grid forwards or backwards to search for long, connected diaganal lines of prime numbers in the grid. The framerate of the animation can be adjusted, as well as the ‚Äúgrid multiplier‚Äù which is how many cells to draw in each row and collumn. Double-clicking on the menu collapses it. There are also basic keyboard arrow controls:Controls LEFT ARROW = Step backward RIGHT ARROW = Step forwards UP ARROW = Pause DOWN ARROW = Pause" }, { "title": "UVa Online Judge Challenge \"11045\"", "url": "/posts/uva-11045/", "categories": "Java, Coding Challenge", "tags": "uva, maximum flow, bipartite graph", "date": "2018-05-01 00:00:00 -0400", "snippet": "This is a maximum flow problem on a bipartite graph. I created the flow chart above to visualize the 3 test cases. The virtual judge run time was 0.18s.View The Problem " }, { "title": "UVa Online Judge Challenge \"10305\"", "url": "/posts/uva-10305/", "categories": "Java, Coding Challenge", "tags": "uva, dag, directed acyclic graph, topological sort, bitset", "date": "2018-04-26 00:00:00 -0400", "snippet": "This problem presents a DAG and the solution requires implementing a topological sort. I noticed that a topological sort can be implemented using only boolean arrays so I used this as an opportunity to finally get around to using Java‚Äôs BitSet class. The virtual judge run time was 0.050s.View The Problem " }, { "title": "UVa Online Judge Challenge \"572\"", "url": "/posts/uva-572/", "categories": "Java, Coding Challenge", "tags": "uva, disjoint set", "date": "2018-04-23 00:00:00 -0400", "snippet": "Although BFS and DFS were recommended solutions to the problem, I saw anopportunity to solve it using Disjoint Sets. Thevirtual judge run time was 0.050s.The Challenge My Solution" }, { "title": "Kattis Challenge \"Grid\"", "url": "/posts/kattis-grid/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2018-04-20 00:00:00 -0400", "snippet": "Solved using a non-recursive version of BFS. Runs in pretty good time.The ChallengeMy solution" }, { "title": "Comparing Java Distance Functions", "url": "/posts/comparing-java-distance-functions/", "categories": "Java", "tags": "distance", "date": "2018-04-17 00:00:00 -0400", "snippet": " Distance formula 1 execution time: 2224ms Distance formula 2 execution time: 4ms Distance formula 3 execution time: 3ms" }, { "title": "Kruskal's Algorithm Visualized With Processing", "url": "/posts/kruskal-algorithm-processing/", "categories": "Java, Processing", "tags": "kruskal's algorithm, minimum spanning tree", "date": "2018-04-11 00:00:00 -0400", "snippet": "" }, { "title": "Faster Java String Inputs", "url": "/posts/java-turbo-reader/", "categories": "Java", "tags": "string", "date": "2018-04-11 00:00:00 -0400", "snippet": "TurboReader is my solution to the poor input performance of Scanner. All I need from a Reader in most programming contest problems is the ability to read ints and Double, and to read them quickly. That is all this class does, and it also tokenizes those values so that I never have to address empty lines in the text input. I have two versions of this class; a buffered version and an unbuffered version. Judging from the NetBeans performance profiler, the unbuffered version is favored in cases where the program only needs to read a few ints from System.in." }, { "title": "UVa Online Judge Challenge \"1112\"", "url": "/posts/uva-1112/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2018-04-09 00:00:00 -0400", "snippet": "This problem deals with a pretty small graph, so I chose to implement the Floyd-Warshall Algorithm instead of Dijkstra‚Äôs Algorithm for the sake of simplicity. This algorithm finds the shortest path between every pair of vertices in a graph so it runs in O(n^3) time. Which sounds bad, but the UVA judge accepted this program with a run time of 0.12s which is well withing the 3-second threshold. I wrote this algorithm in an object-oriented, array-averse way so that if I ever have enough free time I can drop this into to Processing and visualize it in 3D.The Challenge My Solution" }, { "title": "Collatz Conjecture + Unit Circle", "url": "/posts/collatz-conjecture-unit-circle/", "categories": "Java, Processing", "tags": "collatz conjecture, 3n+1", "date": "2018-04-09 00:00:00 -0400", "snippet": "I was inspired by this page to write my own Collatz Conjecture visualization. My first attempt looked pretty close to what I saw in the Numberphile video which is fine and dandy. I tried something different by keeping the rules used to create the original visualization, but wrapping everything around a unit circle. There are 360 ‚Äúbranches‚Äù, each branch representing a 1-degree turn. I don‚Äôt suspect this reveals any new insights into the Collatz Conjecture, but I had fun and it yielded some interesting looking results. The number 327 has a particularly long and interesting life here. The output frames of this Processing sketch were assembled using ffmpeg. " }, { "title": "Minimum Spanning Tree Visualized", "url": "/posts/minimum-spanning-tree-visualized/", "categories": "Java, Processing", "tags": "prim's algorithm, minimum spanning tree", "date": "2018-04-07 00:00:00 -0400", "snippet": "I‚Äôm working on a few programs that I will be using using to visualize algorithms on procedurally generated terrain. This particular program visualizes a minimum spanning tree using Prim‚Äôs Algorithm on random walkers. The terrain is 128x128 tiles, each containing 4 vertices on the negative y-axis that I applied a Perlin Noise height map to. The map projection is orthographic, so all objects with the same dimension appear the same size, regardless of whether they are near or far from the camera. The frames were rendered at 1920x1080 resolution. FFMPEG settings used to assemble the rendered framesffmpeg -f image2 -r 60 -i frame-%04d.tif -vcodec libx264 -profile:v high444 -refs 16 -crf 0 -preset ultrafast test.mp4FFMPEG settings used to add music to the videoffmpeg -i test.mp4 -i music.mp3 -codec copy -shortest output.mp4" }, { "title": "Basic Prime Checker, C++", "url": "/posts/basic-prime-checker/", "categories": "C", "tags": "prime numbers", "date": "2018-03-24 00:00:00 -0400", "snippet": "Exactly what it sounds like." }, { "title": "AT&T Hackathon", "url": "/posts/att-hackathon/", "categories": "Java, Processing", "tags": "android", "date": "2018-03-12 00:00:00 -0400", "snippet": "So I participated in the AT&amp;T Hackathon this year. I approached it as R&amp;D for developing 3D games that run on Android. Idon‚Äôt have much to say about it except that I learned an awful lot about the limitations of Android, which in turntaught me a lot about optimization techniques, DPI-scaling and the matrix stack. Most importantly, the Hackathon taughtme how to code faster. At home, I spend an awful lot of time playing with variables to make things pretty whereas underthis circumstance I was forced to keep creating new features due to the looming threat of having nothing to show at theend. I wrote a lot of useful functions for building 3D scenes and I can‚Äôt wait to start using them on larger projects. " }, { "title": "Merge Sort using WEBGL", "url": "/posts/merge-sort/", "categories": "JavaScript, p5.js", "tags": "sorting, merge sort, interactive", "date": "2018-02-05 00:00:00 -0500", "snippet": "This is a (perhaps overkill) 3D WEBGL visualization of Merge Sort using the WEBGL rendering mode. Launch this sketch is a new window (recommended)Launch the p5.js editorControls ENTER = play sorting animation LEFT_ARROW = step backwards RIGHT_ARROW = step forwards SCROLL_UP = zoom in SCROLL_DOWN = zoom out" }, { "title": "10PRINT Image Filter", "url": "/posts/10print-image-filter/", "categories": "JavaScript, p5.js", "tags": "10PRINT, interactive", "date": "2018-01-31 00:00:00 -0500", "snippet": " This sketch is a browser-based image filtering utility inspired by 10PRINT. The UI allows users to produce faithful looking interpretations of 10PRINT, 10PRINT patterns that look hand-drawn, and the user can even create an explosive shit-mess of scribbles, if they so choose to.Launch this sketch is a new window (recommended)Launch p5.js web editor" }, { "title": "Insertion Sort using WEBGL", "url": "/posts/insertion-sort/", "categories": "JavaScript, p5.js", "tags": "sorting, insertion sort, interactive", "date": "2018-01-28 00:00:00 -0500", "snippet": "This is a (perhaps overkill) 3D WEBGL visualization of Insertion Sort using the WEBGL rendering mode. click mouse in iframe to beginControls MOUSE = pan around ENTER = play sorting animation LEFT_ARROW = step backwards RIGHT_ARROW = step forwards SCROLL_UP = zoom in SCROLL_DOWN = zoom outLaunch this sketch is a new window (recommended)&lt;/h2&gt;Launch the p5.js editor" }, { "title": "Generating Terrain with Open Simplex Noise", "url": "/posts/generating-terrain-with-open-simplex-noise/", "categories": "Java, Processing", "tags": "open simplex noise", "date": "2018-01-03 00:00:00 -0500", "snippet": "Expanding on last night‚Äôs work with Open Simplex Noise. Ifigured the next logical step was to make a Minecraftian terrain generator, so here it is. If I ever felt compelled tobuild a game from the ground up, this would probably be my starting point. Just to further explore the idea of making a game, I threw some random walkers on my random terrain to see whatperformance looked like. I was getting only 30FPS with 64 walkers on a relatively beefy CPU, confirming the obvious factthat Java is the wrong language for this application. FFMPEG settings used to assemble the rendered framesffmpeg -r 60 -f image2 -s 3840x2160 -i frame-%04d.tif -c:v libx264 -preset slow -profile:v high -crf 9 -coder 1 -pix_fmtyuv420p -movflags +faststart -g 30 -bf 2 -c:a aac -b:a 384k -profile:a aac_low test4.mp4FFMPEG settings used to add music to the videoffmpeg -i test.mp4 -i music.mp3 -codec copy -shortest output.mp4" }, { "title": "Open Simplex Noise", "url": "/posts/open-simplex-noise/", "categories": "Java, Processing", "tags": "open simplex noise", "date": "2018-01-02 00:00:00 -0500", "snippet": "I recently sought out to find an easier way to create perfectly looped animations and discovered the idea of 4D Simplex Noise. The internet oracles led me to necessarydisorder‚Äôs WordPress tutorial, entitled Drawing from noise, and then making animated loopy GIFs from there. which I found to be very informative, inspiring and aptly named. I built upon what I‚Äôve done in previous projects; created a 2D grid of pixel objects and animating them, this time mapping their motion to the noise function. At lower scales (0.001) the motion is organic and smooth enough to produce some nice effects." }, { "title": "Flippy Tiles", "url": "/posts/flippy-tiles/", "categories": "Java, Processing", "tags": "perlin noise", "date": "2017-11-18 00:00:00 -0500", "snippet": "Simple animation of tiles flipping. They can flip randomly or they can be flipped by applying Perlin Noise. GitHub Repository" }, { "title": "Juno Cam Image Processing", "url": "/posts/juno-cam-image-processing/", "categories": "Java, Processing", "tags": "juno, jupiter, space", "date": "2017-11-12 00:00:00 -0500", "snippet": "This is a program I wrote last November that assembles raw image data coming from the Juno Spacecraft. When I started, I thought it would be cool if this program ran in a browser window. When I finished, I was certain that this program should have been a desktop application. The final images this program produces are quite large; well over 20mb, showing the individual red, green, blue, and composite brightness data. Here‚Äôs a block of text ripped from the JunoCam website that does a good job of explaining why these images need to be reconstructed: Like previous MSSS cameras (e.g., Mars Reconnaissance Orbiter‚Äôs Mars Color Imager) Junocam is a ‚Äúpushframe‚Äù imager. The detector has multiple filter strips, each with a different bandpass, bonded directly to its photoactive surface. Each strip extends the entire width of the detector, but only a fraction of its height; Junocam‚Äôs filter strips are 1600 pixels wide and about 155 rows high. The filter strips are scanned across the target by spacecraft rotation. At the nominal spin rate of 2 RPM, frames are acquired about every 400 milliseconds. Junocam has four filters: three visible (red/green/blue) and a narrowband ‚Äúmethane‚Äù filter centered at about 890 nm. The spacecraft spin rate would cause more than a pixel‚Äôs worth of image blurring for exposures longer than about 3.2 milliseconds. For the illumination conditions at Jupiter such short exposures would result in unacceptably low SNR, so the camera provides Time-Delayed-Integration (TDI). TDI vertically shifts the image one row each 3.2 milliseconds over the course of the exposure, cancelling the scene motion induced by rotation. Up to about 100 TDI steps can be used for the orbital timing case while still maintaining the needed frame rate for frame-to-frame overlap. For Earth Flyby the light levels are high enough that TDI is not needed except for the methane band and for nightside imaging. Junocam pixels are 12 bits deep from the camera but are converted to 8 bits inside the instrument using a lossless ‚Äúcompanding‚Äù table, a process similar to gamma correction, to reduce their size. All Junocam products on the missionjuno website are in this 8-bit form as received on Earth. Scientific users interested in radiometric analysis should use the ‚ÄúRDR‚Äù data products archived with the Planetary Data System, which have been converted back to a linear 12-bit scale.View on NASA websiteGitHub Repository" }, { "title": "UVa Online Judge Challenge \"10550\"", "url": "/posts/uva-10550/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2017-11-09 00:00:00 -0500", "snippet": "The Challenge My Solution" }, { "title": "Demonstrating Procedures and Console Output", "url": "/posts/demonstrating-procedures-and-console-output/", "categories": "MASM", "tags": "assembly", "date": "2017-10-24 00:00:00 -0400", "snippet": "Output of the programThis MASM program demonstrates the use of procedures (functions) as well as printing different colors to console." }, { "title": "UVa Online Judge Challenge \"272\"", "url": "/posts/uva-272/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2017-10-17 00:00:00 -0400", "snippet": "The Challenge My Solution" }, { "title": "Sieve of Eratosthenes", "url": "/posts/sieve-of-eratosthenes/", "categories": "MASM", "tags": "assembly, prime numbers", "date": "2017-10-17 00:00:00 -0400", "snippet": "This is my first attempt a prime sieve in assembly. It is largely a direct translation from a Sieve of Eratosthenes originally written in Java, so this program is not exactly optimally structured. Firstly, it stores all primes up to n in an array. Secondly, it counts the number of primes before n and stores that hexadecimal value in the EAX register. This is rough. There is much room for improvement, and I intend to revisit this program without using the MUL function. " }, { "title": "Nth Fibonacci Number", "url": "/posts/nth-fibonacci-number/", "categories": "MASM", "tags": "fibonacci, assembly", "date": "2017-10-07 00:00:00 -0400", "snippet": "This is my first x86 MASM program. As the title states, this program outputs a Fibonacci number that corresponds to an input value of n. I‚Äôm not happy with its current state because it is constantly swapping between the memory and registers." }, { "title": "UVa Online Judge Challenge \"10110\"", "url": "/posts/uva-10110/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2017-10-05 00:00:00 -0400", "snippet": "The Challenge My Solution" }, { "title": "UVa Online Judge Challenge \"100\"", "url": "/posts/uva-100/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2017-10-05 00:00:00 -0400", "snippet": "The Challenge My Solution" }, { "title": "Kattis Challenge \"Sum of Others\"", "url": "/posts/kattis-sum-of-others/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2017-09-15 00:00:00 -0400", "snippet": "The ChallengeMy solution" }, { "title": "Kattis Challenge \"Parking\"", "url": "/posts/kattis-parking2/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2017-09-15 00:00:00 -0400", "snippet": "The ChallengeMy solution" }, { "title": "UVa Online Judge Challenge \"11172\"", "url": "/posts/uva-11172/", "categories": "Java, Coding Challenge", "tags": "uva", "date": "2017-08-24 00:00:00 -0400", "snippet": "The Challenge My Solution" }, { "title": "Kattis Challenge \"Server\"", "url": "/posts/kattis-server/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2017-08-18 00:00:00 -0400", "snippet": "The Challenge My solution" }, { "title": "Kattis Challenge \"Line Them Up\"", "url": "/posts/kattis-line-them-up/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2017-08-18 00:00:00 -0400", "snippet": "The Challenge My solution" }, { "title": "Kattis Challenge \"A Different Problem\"", "url": "/posts/kattis-different/", "categories": "Java, Coding Challenge", "tags": "kattis", "date": "2017-08-15 00:00:00 -0400", "snippet": "The Challenge My solution" }, { "title": "Simple 2D Terrain Generation Using Perlin Noise", "url": "/posts/simple-2d-perlin-noise/", "categories": "JavaScript, p5.js", "tags": "perlin noise, terrain, interactive", "date": "2017-07-16 00:00:00 -0400", "snippet": " click mouse in iframe to generate a new mapThis sketch maps perlin noise between a value of 0 and 255 across a grid. Values greater than or equal to 100 are‚Äúgrass‚Äù, values between 75 and 100 are ‚Äúsand‚Äù, and values less than or equal to 75 are ‚Äúwater‚Äù.Click here to render a fullscreen mapLaunch the p5.js editor" }, { "title": "Arrays", "url": "/posts/arrays/", "categories": "JavaScript, p5.js", "tags": "interactive", "date": "2016-12-13 00:00:00 -0500", "snippet": " View FullscreenView In p5.js EditorClick on them circles homes" } ]
